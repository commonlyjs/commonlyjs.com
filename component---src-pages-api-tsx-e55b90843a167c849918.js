(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"4GIC":function(e){e.exports=JSON.parse('[{"name":"Comparator","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[],"returnValue":{"type":null,"description":null}},"examples":[],"metadata":{"source":"/Comparator/Comparator.ts","specification":"/Comparator/Comparator.spec.ts"},"description":"The Comparator type represents a comparison function, which imposes a total ordering on enumerable lists."},{"name":"Function","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[],"returnValue":{"type":null,"description":null}},"examples":[],"metadata":{"source":"/Function/Function.ts","specification":"/Function/Function.spec.ts"},"description":"The Function type represents the {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function | function\'s constructor}."},{"name":"Identity","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[],"returnValue":{"type":null,"description":null}},"examples":[],"metadata":{"source":"/Identity/Identity.ts","specification":"/Identity/Identity.spec.ts"},"description":"The Identity type represents a function which takes a single value as an argument and returns that value, an {@link https://en.wikipedia.org/wiki/Identity_function | identity function}."},{"name":"Mapper","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[],"returnValue":{"type":null,"description":null}},"examples":[],"metadata":{"source":"/Mapper/Mapper.ts","specification":"/Mapper/Mapper.spec.ts"},"description":"The Mapper type represents a function which always a single value as an argument and returns a value, a {@link https://en.wikipedia.org/wiki/Map_(higher-order_function) | mapper function}."},{"name":"Nil","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[],"returnValue":{"type":null,"description":null}},"examples":[],"metadata":{"source":"/Nil/Nil.ts","specification":"/Nil/Nil.spec.ts"},"description":"The Nil type represents a union of undefined and null."},{"name":"Predicate","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[],"returnValue":{"type":null,"description":null}},"examples":[],"metadata":{"source":"/Predicate/Predicate.ts","specification":"/Predicate/Predicate.spec.ts"},"description":"The Predicate type represents a function which takes a single value as an argument and returns a boolean, a {@link https://en.wikipedia.org/wiki/Predicate_(mathematical_logic) | predicate function}."},{"name":"Primitive","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[],"returnValue":{"type":null,"description":null}},"examples":[],"metadata":{"source":"/Primitive/Primitive.ts","specification":"/Primitive/Primitive.spec.ts"},"description":"The Primitive type represents a union of {@link https://developer.mozilla.org/en-US/docs/Glossary/primitive | primitive} data types. An {@link https://developer.mozilla.org/en-US/docs/Glossary/undefined | undefined}, {@link https://developer.mozilla.org/en-US/docs/Glossary/null | null}, {@link https://developer.mozilla.org/en-US/docs/Glossary/boolean | boolean}, {@link https://developer.mozilla.org/en-US/docs/Glossary/number | number}, {@link https://developer.mozilla.org/en-US/docs/Glossary/bigint | bigint}, {@link https://developer.mozilla.org/en-US/docs/Glossary/string | string} and a {@link https://developer.mozilla.org/en-US/docs/Glossary/symbol | symbol}."},{"name":"Reduced","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[],"returnValue":{"type":null,"description":null}},"examples":[],"metadata":{"source":"/Reduced/Reduced.ts","specification":"/Reduced/Reduced.spec.ts"},"description":"[Not yet documented]"},{"name":"Reducer","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[],"returnValue":{"type":null,"description":null}},"examples":[],"metadata":{"source":"/Reducer/Reducer.ts","specification":"/Reducer/Reducer.spec.ts"},"description":"The Reducer type represents a function which takes an accumulator and a value and returns an updated accumulator."},{"name":"Transducer","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[],"returnValue":{"type":null,"description":null}},"examples":[],"metadata":{"source":"/Transducer/Transducer.ts","specification":"/Transducer/Transducer.spec.ts"},"description":"[Not yet documented]"}]')},DiWb:function(e){e.exports=JSON.parse('{"name":"@commonly/math","version":"0.1.1-next.8","description":"Collection of mathematics utilities.","main":"./index.js","types":"./index.d.ts","scripts":{"build":"npm run clean && cmnybuild","clean":"cmnyclean","test":"cmnytest","document":"cmnydocument ./","prepack":"npm run build && npm run test"},"publishConfig":{"access":"public"},"files":["package.json","README.md","CHANGELOG.md","**/*.js","**/*.d.ts","**/*.d.ts.map"],"author":"Mateusz Pietrzak","homepage":"https://commonlyjs.com","repository":"https://github.com/commonlyjs/commonly","bugs":"https://github.com/commonlyjs/commonly/issues","license":"MIT","keywords":["commonly","math"]}')},EYW6:function(e){e.exports=JSON.parse('[{"name":"xchain","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"mapper","variadic":false,"defaultValue":null,"optional":false,"type":"Mapper","description":"is a mapping function"}],"typeparameters":[{"name":"TValueA","defaultValue":null,"extends":null},{"name":"TValueB","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":"a transducing function"}},"examples":[],"metadata":{"source":"/xchain/xchain.ts","specification":"/xchain/xchain.spec.ts"},"description":"[Not yet documented]"},{"name":"xdistinct","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xdistinct/xdistinct.ts","specification":"/xdistinct/xdistinct.spec.ts"},"description":"[Not yet documented]"},{"name":"xdrop","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"n","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":null}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xdrop/xdrop.ts","specification":"/xdrop/xdrop.spec.ts"},"description":"[Not yet documented]"},{"name":"xdropWhile","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"predicate","variadic":false,"defaultValue":null,"optional":false,"type":"Predicate","description":null}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xdropWhile/xdropWhile.ts","specification":"/xdropWhile/xdropWhile.spec.ts"},"description":"[Not yet documented]"},{"name":"xevery","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"predicate","variadic":false,"defaultValue":null,"optional":false,"type":"Predicate","description":null}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xevery/xevery.ts","specification":"/xevery/xevery.spec.ts"},"description":"[Not yet documented]"},{"name":"xfilter","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"predicate","variadic":false,"defaultValue":null,"optional":false,"type":"Predicate","description":"is a predicate function"}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":"a transducer function"}},"examples":[],"metadata":{"source":"/xfilter/xfilter.ts","specification":"/xfilter/xfilter.spec.ts"},"description":"[Not yet documented]"},{"name":"xfind","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"predicate","variadic":false,"defaultValue":null,"optional":false,"type":"Predicate","description":"is a predicate function"}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":"a transducer function"}},"examples":[],"metadata":{"source":"/xfind/xfind.ts","specification":"/xfind/xfind.spec.ts"},"description":"[Not yet documented]"},{"name":"xflatten","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":"a transducing function"}},"examples":[],"metadata":{"source":"/xflatten/xflatten.ts","specification":"/xflatten/xflatten.spec.ts"},"description":"[Not yet documented]"},{"name":"xhead","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xhead/xhead.ts","specification":"/xhead/xhead.spec.ts"},"description":"[Not yet documented]"},{"name":"xlast","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xlast/xlast.ts","specification":"/xlast/xlast.spec.ts"},"description":"[Not yet documented]"},{"name":"xmap","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"mapper","variadic":false,"defaultValue":null,"optional":false,"type":"Mapper","description":"is a mapping function"}],"typeparameters":[{"name":"TValueA","defaultValue":null,"extends":null},{"name":"TValueB","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":"a transducing function"}},"examples":[],"metadata":{"source":"/xmap/xmap.ts","specification":"/xmap/xmap.spec.ts"},"description":"[Not yet documented]"},{"name":"xnth","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"i","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":null}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xnth/xnth.ts","specification":"/xnth/xnth.spec.ts"},"description":"[Not yet documented]"},{"name":"xpartition","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"n","variadic":false,"defaultValue":null,"optional":false,"type":"number"}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xpartition/xpartition.ts","specification":"/xpartition/xpartition.spec.ts"},"description":"[Not yet documented]"},{"name":"xpartitionBy","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"mapper","variadic":false,"defaultValue":null,"optional":false,"type":"Mapper"}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null},{"name":"TBy","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xpartitionBy/xpartitionBy.ts","specification":"/xpartitionBy/xpartitionBy.spec.ts"},"description":"[Not yet documented]"},{"name":"xrepeat","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"n","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":null}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xrepeat/xrepeat.ts","specification":"/xrepeat/xrepeat.spec.ts"},"description":"[Not yet documented]"},{"name":"xreverse","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xreverse/xreverse.ts","specification":"/xreverse/xreverse.spec.ts"},"description":"[Not yet documented]"},{"name":"xsize","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xsize/xsize.ts","specification":"/xsize/xsize.spec.ts"},"description":"[Not yet documented]"},{"name":"xslice","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"start","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":null},{"name":"end","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":null}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xslice/xslice.ts","specification":"/xslice/xslice.spec.ts"},"description":"[Not yet documented]"},{"name":"xsome","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"predicate","variadic":false,"defaultValue":null,"optional":false,"type":"Predicate","description":null}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xsome/xsome.ts","specification":"/xsome/xsome.spec.ts"},"description":"[Not yet documented]"},{"name":"xsort","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"comparator","variadic":false,"defaultValue":null,"optional":false,"type":"Comparator","description":null}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xsort/xsort.ts","specification":"/xsort/xsort.spec.ts"},"description":"[Not yet documented]"},{"name":"xtail","since":"1.0.0","remarks":[],"signature":{"parameters":[],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xtail/xtail.ts","specification":"/xtail/xtail.spec.ts"},"description":"[Not yet documented]"},{"name":"xtake","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"n","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":null}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xtake/xtake.ts","specification":"/xtake/xtake.spec.ts"},"description":"[Not yet documented]"},{"name":"xtakeWhile","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"predicate","variadic":false,"defaultValue":null,"optional":false,"type":"Predicate","description":null}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transducer","description":null}},"examples":[],"metadata":{"source":"/xtakeWhile/xtakeWhile.ts","specification":"/xtakeWhile/xtakeWhile.spec.ts"},"description":"[Not yet documented]"}]')},EpC0:function(e){e.exports=JSON.parse('[{"name":"add","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"augend","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":"is the first of two addends"},{"name":"addend","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":"is the second of two addends"}],"typeparameters":[],"returnValue":{"type":"number","description":"a sum"}},"examples":["import { add } from \\"@commonly/math\\"\\r\\radd(3, 2)   // -> 5\\r"],"metadata":{"source":"/add/add.ts","specification":"/add/add.spec.ts"},"description":"Combines two quantities using the plus operator."},{"name":"decrement","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"number","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":"is a number to decrement by one"}],"typeparameters":[],"returnValue":{"type":"number","description":"a decremented number by one"}},"examples":["import { decrement } from \\"@commonly/math\\"\\r\\rdecrement(7)    // -> 6\\r"],"metadata":{"source":"/decrement/decrement.ts","specification":"/decrement/decrement.spec.ts"},"description":"Decrements a given number by one."},{"name":"divide","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"dividend","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":"is a quantity that is divided by another quantity"},{"name":"divisor","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":"is a quantity which divides a dividend"}],"typeparameters":[],"returnValue":{"type":"number","description":"a quotient"}},"examples":["import { divide } from \\"@commonly/math\\"\\r\\rdivide(3, 2)    // -> 1.5\\r"],"metadata":{"source":"/divide/divide.ts","specification":"/divide/divide.spec.ts"},"description":"Divides two quantities."},{"name":"increment","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"number","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":"is a number to decrement by one"}],"typeparameters":[],"returnValue":{"type":"number","description":"an incremented number by one"}},"examples":["import { decrement } from \\"@commonly/Math\\"\\r\\rdecrement(7)    // -> 8\\r"],"metadata":{"source":"/increment/increment.ts","specification":"/increment/increment.spec.ts"},"description":"Increments a given number by one."},{"name":"maximum","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"numbers","variadic":false,"defaultValue":null,"optional":false,"type":"number[]","description":"is a list in which we will look for a maximum"}],"typeparameters":[],"returnValue":{"type":"number","description":"a maximum of an xs"}},"examples":["import { maximum } from \\"@commonly/math\\"\\r\\rmaximum([ 0, 1, 1, 2, 3, 5, 8 ])    // -> 8\\r"],"metadata":{"source":"/maximum/maximum.ts","specification":"/maximum/maximum.spec.ts"},"description":"Finds a maximum in a given list."},{"name":"minimum","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"numbers","variadic":false,"defaultValue":null,"optional":false,"type":"number[]","description":"is a list in which we will look for a maximum"}],"typeparameters":[],"returnValue":{"type":"number","description":"a maximum of an xs"}},"examples":["import { minimum } from \\"@commonly/math\\"\\r\\rminimum([ 0, 1, 1, 2, 3, 5, 8 ])    // -> 0\\r"],"metadata":{"source":"/minimum/minimum.ts","specification":"/minimum/minimum.spec.ts"},"description":"Finds a minimum in a given list."},{"name":"multiply","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"multiplier","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":"is a quantity by which another (the multiplicand) is multiplied"},{"name":"multiplicand","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":"is a quantity that is multiplied by another (the multiplier)"}],"typeparameters":[],"returnValue":{"type":"number","description":"a product"}},"examples":["import { multiply } from \\"@commonly/math\\"\\r\\rmultiply(3, 2)  // -> 6\\r"],"metadata":{"source":"/multiply/multiply.ts","specification":"/multiply/multiply.spec.ts"},"description":"Multiplies two quantities."},{"name":"subtract","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"minuend","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":"is a quantity from which another (the subtrahend) is subtracted"},{"name":"subtrahend","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":"is a quantity which is subtracted from another (the minuend)"}],"typeparameters":[],"returnValue":{"type":"number","description":"a difference"}},"examples":["import { subtract } from \\"@commonly/math\\"\\r\\rsubtract(3, 2)  // -> 1\\r"],"metadata":{"source":"/subtract/subtract.ts","specification":"/subtract/subtract.spec.ts"},"description":"Subtracts two quantities using the minus operator."}]')},Mp3g:function(e){e.exports=JSON.parse('{"name":"@commonly/iterable","version":"0.2.0-next.37","description":"Collection of functional utilities, often higher-order functions.","main":"./index.js","types":"./index.d.ts","scripts":{"build":"npm run clean && cmnybuild","clean":"cmnyclean","test":"cmnytest","document":"cmnydocument ./","prepack":"npm run build && npm run test"},"publishConfig":{"access":"public"},"files":["package.json","README.md","CHANGELOG.md","**/*.js","**/*.d.ts","**/*.d.ts.map"],"author":"Mateusz Pietrzak","homepage":"https://commonlyjs.com","repository":"https://github.com/commonlyjs/commonly","bugs":"https://github.com/commonlyjs/commonly/issues","license":"MIT","keywords":["commonly","iterable"]}')},SASA:function(e,a,t){"use strict";t.r(a);t("f3/d");var n=t("q1tI"),r=t.n(n);t("Oyvg"),t("KKXr"),t("Z2Ku"),t("L9s1"),t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V");var i=function(e){e.children;var a=e.items,t=Object(n.useRef)(null),i=Object(n.useRef)(null),s=Object(n.useRef)(null),l=Object(n.useState)(""),o=l[0],u=l[1];function c(e){var a=e.target;if(i.current&&!i.current.contains(a)&&s.current&&!s.current.contains(a)){var n=t.current;n&&(n.classList.remove("opened"),n.classList.add("closed"))}}Object(n.useEffect)((function(){return document.addEventListener("mousedown",c),function(){document.removeEventListener("mousedown",c)}}));var p=function(){var e=t.current;e&&(e.classList.toggle("opened"),e.classList.toggle("closed"))};return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{ref:t,className:"column static mobile-hidden drawer"},r.a.createElement("div",{className:"sticky"},r.a.createElement("div",{ref:i,className:"card drawer-content",tabIndex:0},r.a.createElement("div",{className:"header"},r.a.createElement("div",{className:"input stretched"},r.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:"feather feather-search"},r.a.createElement("circle",{cx:"11",cy:"11",r:"8"}),r.a.createElement("line",{x1:"21",y1:"21",x2:"16.65",y2:"16.65"})),r.a.createElement("input",{id:"search",type:"text",autoComplete:"off",onChange:function(e){var a=e.target;u(a.value)}}),r.a.createElement("label",{htmlFor:"search"},"Search"))),r.a.createElement("div",{className:"content"},r.a.createElement("div",{className:"menu"},Object.keys(a).map((function(e){if(a[e].some((function(a){return a.toLocaleUpperCase().includes(o.toLocaleUpperCase())||e.toLocaleUpperCase().includes(o.toLocaleUpperCase())}))){var t=e.split(new RegExp(o||" ","i")),n=t[0],i=t[1],s=void 0===i?"":i,l=e.indexOf(n)+n.length,u=e.substring(l,e.lastIndexOf(s)||l);return r.a.createElement("div",{key:e,className:"item"},r.a.createElement("div",{className:"header"},r.a.createElement("span",null,n),r.a.createElement("span",{style:{color:"#00d1b2"}},u),r.a.createElement("span",null,s)),r.a.createElement("div",{className:"menu"},a[e].filter((function(a){return a.toLocaleUpperCase().includes(o.toLocaleUpperCase())||e.toLocaleUpperCase().includes(o.toLocaleUpperCase())})).map((function(a){var t=a.split(new RegExp(o||" ","i")),n=t[0],i=t[1],s=void 0===i?"":i,l=a.indexOf(n)+n.length,u=a.substring(l,a.lastIndexOf(s)||l);return r.a.createElement("a",{key:a,className:"item",href:"#"+e.split("/")[1]+"-"+a,onClick:p},r.a.createElement("span",null,n),r.a.createElement("span",{style:{color:"#00d1b2"}},u),r.a.createElement("span",null,s))}))))}}))))))),r.a.createElement("div",{ref:s,className:"fab"},r.a.createElement("button",{className:"action",tabIndex:-1,onClick:p},r.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:"feather feather-search"},r.a.createElement("circle",{cx:"11",cy:"11",r:"8"}),r.a.createElement("line",{x1:"21",y1:"21",x2:"16.65",y2:"16.65"})))))},s=t("4XLq"),l=(t("pIFo"),t("wZee")),o=t.n(l);var u=function(e){var a=e.pkgName,t=e.name,n=e.since,i=e.description,s=e.signature,l=e.examples,u=e.metadata,c=e.pkg,p=(i||"").replace(/\{@link (.*)\}/g,(function(e,a){var t=a.split(" | "),n=t[0],r=t[1];if(/^http(s?):\/\//.test(n))return'<a href="'+n+'">'+r+"</a>";var i=n.split(":"),s=i[0],l=i[1];return'<a href="#'+s.split("/")[1]+"-"+l+'">'+r+"</a>"})).replace(/\*\*(.*)\*\*/g,(function(e,a){return"<strong>"+a+"</strong>"})).replace(/\*(.*)\*/g,(function(e,a){return"<em>"+a+"</em>"})),m=t;s.parameters.length&&(m=t+"("+s.parameters.map((function(e){var a=e.name;return"_"===a&&(a=""),e.optional&&(a+="?"),e.variadic&&(a="..."+a),e.defaultValue&&(a="["+a+" = "+e.defaultValue+"]"),a})).join(", ")+")");var d=function(e){return c.repository+"/blob/v"+c.version+"/packages/"+c.name.replace("@commonly/","")+e||"#"};return r.a.createElement("div",{id:a.split("/")[1]+"-"+t,className:"card snippet"},r.a.createElement("div",{className:"header"},r.a.createElement("div",{className:"title"},m),r.a.createElement("small",{className:"misc"},r.a.createElement("a",{href:d(u.source)},"source"),r.a.createElement("a",{href:d(u.specification)},"specification"))),r.a.createElement("div",{className:"content"},r.a.createElement("p",{dangerouslySetInnerHTML:{__html:p}})),r.a.createElement("div",{className:"collapsible"},r.a.createElement("div",{className:"content"},!!s.parameters.length&&r.a.createElement(r.a.Fragment,null,r.a.createElement("h3",{className:"header"},"Parameters"),r.a.createElement("table",null,r.a.createElement("tbody",null,s.parameters.map((function(e){return r.a.createElement("tr",{key:e.name},r.a.createElement("td",null,r.a.createElement("code",null,r.a.createElement("strong",null,e.variadic&&"...",e.name,": ",e.type))),r.a.createElement("td",null,r.a.createElement("small",null,e.description)))})))),r.a.createElement("p",null,r.a.createElement("small",null,r.a.createElement("strong",null,r.a.createElement("code",null,"returns: ",s.returnValue.type)),"  ",s.returnValue.description))),r.a.createElement("h3",{className:"header"},"Metadata"),r.a.createElement("table",null,r.a.createElement("tbody",null,r.a.createElement("tr",null,r.a.createElement("td",null,r.a.createElement("small",null,r.a.createElement("strong",null,"package"))),r.a.createElement("td",null,r.a.createElement("small",null,c.name))),r.a.createElement("tr",null,r.a.createElement("td",null,r.a.createElement("small",null,r.a.createElement("strong",null,"version"))),r.a.createElement("td",null,r.a.createElement("small",null,"v",c.version))),r.a.createElement("tr",null,r.a.createElement("td",null,r.a.createElement("small",null,r.a.createElement("strong",null,"since"))),r.a.createElement("td",null,r.a.createElement("small",null,"v",n))))))),l.map((function(e){return r.a.createElement("pre",{key:e,className:"example language-javascript"},r.a.createElement("code",{dangerouslySetInnerHTML:{__html:o.a.highlight(e,o.a.languages.javascript,"javascript")}}))})))},c=t("ZPm4"),p=t("gL0S"),m=t("gFSH"),d=t("Mp3g"),f=t("EpC0"),y=t("DiWb"),g=t("T/ln"),h=t("jLYJ"),v=t("EYW6"),x=t("aqxX"),b=t("4GIC"),k=t("TY3G");a.default=function(){var e;return r.a.createElement(s.a,null,r.a.createElement("div",{className:"layout"},r.a.createElement("div",{className:"row"},r.a.createElement(i,{items:(e={},e[p.name]=c.map((function(e){return e.name})),e[d.name]=m.map((function(e){return e.name})),e[y.name]=f.map((function(e){return e.name})),e[h.name]=g.map((function(e){return e.name})),e[x.name]=v.map((function(e){return e.name})),e[k.name]=b.map((function(e){return e.name})),e)}),r.a.createElement("div",{className:"column"},r.a.createElement("div",{className:"container"},r.a.createElement("h1",{className:"header"},p.name),r.a.createElement("p",null,p.description),c.map((function(e){return r.a.createElement(u,{key:e.name,pkgName:p.name,name:e.name,since:e.since,description:e.description,signature:e.signature,examples:e.examples,metadata:e.metadata,pkg:p})})),r.a.createElement("h1",{className:"header"},d.name),r.a.createElement("p",null,d.description),m.map((function(e){return r.a.createElement(u,{key:e.name,pkgName:d.name,name:e.name,since:e.since,description:e.description,signature:e.signature,examples:e.examples,metadata:e.metadata,pkg:d})})),r.a.createElement("h1",{className:"header"},y.name),r.a.createElement("p",null,y.description),f.map((function(e){return r.a.createElement(u,{key:e.name,pkgName:y.name,name:e.name,since:e.since,description:e.description,signature:e.signature,examples:e.examples,metadata:e.metadata,pkg:y})})),r.a.createElement("h1",{className:"header"},h.name),r.a.createElement("p",null,h.description),g.map((function(e){return r.a.createElement(u,{key:e.name,pkgName:h.name,name:e.name,since:e.since,description:e.description,signature:e.signature,examples:e.examples,metadata:e.metadata,pkg:h})})),r.a.createElement("h1",{className:"header"},x.name),r.a.createElement("p",null,x.description),v.map((function(e){return r.a.createElement(u,{key:e.name,pkgName:x.name,name:e.name,since:e.since,description:e.description,signature:e.signature,examples:e.examples,metadata:e.metadata,pkg:x})})),r.a.createElement("h1",{className:"header"},k.name),r.a.createElement("p",null,k.description),b.map((function(e){return r.a.createElement(u,{key:e.name,pkgName:k.name,name:e.name,since:e.since,description:e.description,signature:e.signature,examples:e.examples,metadata:e.metadata,pkg:k})})))))))}},"T/ln":function(e){e.exports=JSON.parse('[{"name":"isArray","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"unknown | TValue[]","description":"is a value to check"}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"boolean","description":"either true or false whether the value is an array or not"}},"examples":["import { isArray } from \\"@commonly/reflect\\"\\r\\risArray([])     //-> true\\risArray({})      //-> false\\r"],"metadata":{"source":"/isArray/isArray.ts","specification":"/isArray/isArray.spec.ts"},"description":"Check if a given value is an {@link https://developer.mozilla.org/en-US/docs/Glossary/array | array}."},{"name":"isBoolean","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"unknown | boolean","description":"is a value to check"}],"typeparameters":[],"returnValue":{"type":"boolean","description":"either true or false whether the value is a boolean or not"}},"examples":["import { isBoolean } from \\"@commonly/reflect\\"\\r\\risBoolean(true)     //-> true\\risBoolean(false)    //-> true\\risBoolean(NaN)      //-> false\\r"],"metadata":{"source":"/isBoolean/isBoolean.ts","specification":"/isBoolean/isBoolean.spec.ts"},"description":"Check if a given value is a {@link https://developer.mozilla.org/en-US/docs/Glossary/boolean | boolean}."},{"name":"isError","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"unknown | Error","description":"is a value to check"}],"typeparameters":[],"returnValue":{"type":"boolean","description":"either true or false whether the value is an Error or not"}},"examples":["import { isError } from \\"@commonly/reflect\\"\\r\\risError(new Error())    //-> true\\risError(TypeError())    //-> true\\risError(NaN)            //-> false\\r"],"metadata":{"source":"/isError/isError.ts","specification":"/isError/isError.spec.ts"},"description":"Check if a given value is an {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error | Error}."},{"name":"isFunction","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"unknown | TFunction","description":"is a value to check"}],"typeparameters":[{"name":"TFunction","defaultValue":null,"extends":null}],"returnValue":{"type":"boolean","description":"either true or false whether the value is a function or not"}},"examples":["import { isFunction } from \\"@commonly/reflect\\"\\r\\risFunction(Math.add)        //-> true\\risFunction(() => void 0))   //-> true\\risFunction(Math.PI)         //-> false\\r"],"metadata":{"source":"/isFunction/isFunction.ts","specification":"/isFunction/isFunction.spec.ts"},"description":"Check if a given value is a {@link https://developer.mozilla.org/en-US/docs/Glossary/function | function}."},{"name":"isMap","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"unknown | Map","description":"is a value to check"}],"typeparameters":[{"name":"TKey","defaultValue":null,"extends":null},{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"boolean","description":"either true or false whether the value is a Map or not"}},"examples":["import { isMap } from \\"@commonly/reflect\\"\\r\\risMap(new Map())     //-> true\\risMap(NaN)           //-> false\\r"],"metadata":{"source":"/isMap/isMap.ts","specification":"/isMap/isMap.spec.ts"},"description":"Check if a given value is a {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map | Map}."},{"name":"isNil","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"unknown | Nil","description":"is a value to check"}],"typeparameters":[],"returnValue":{"type":"boolean","description":"either true or false whether the value is a Nil or not"}},"examples":["import { isNil } from \\"@commonly/reflect\\"\\r\\risNil(undefined)   //-> true\\risNil(null)        //-> true\\risNil(NaN)         //-> false\\r"],"metadata":{"source":"/isNil/isNil.ts","specification":"/isNil/isNil.spec.ts"},"description":"Check if a given value is a {@link @commonly/type:Nil | Nil} (either an undefined or a null)."},{"name":"isNull","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"unknown | null","description":"is a value to check"}],"typeparameters":[],"returnValue":{"type":"boolean","description":"either true or false whether the value is a null or not"}},"examples":["import { isNull } from \\"@commonly/reflect\\"\\r\\risNull(null)        //-> true\\risNull(undefined)   //-> false\\r"],"metadata":{"source":"/isNull/isNull.ts","specification":"/isNull/isNull.spec.ts"},"description":"Check if a given value is a {@link https://developer.mozilla.org/en-US/docs/Glossary/null | null}."},{"name":"isNumber","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"unknown | number","description":"is a value to check"}],"typeparameters":[],"returnValue":{"type":"boolean","description":"either true or false whether the value is a number or not"}},"examples":["import { isNumber } from \\"@commonly/reflect\\"\\r\\risNumber(0)           //-> true\\risNumber(NaN)         //-> true\\risNumber(null)        //-> false\\r"],"metadata":{"source":"/isNumber/isNumber.ts","specification":"/isNumber/isNumber.spec.ts"},"description":"Check if a given value is a {@link https://developer.mozilla.org/en-US/docs/Glossary/number | number}."},{"name":"isObject","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"unknown | ","description":"is a value to check"}],"typeparameters":[],"returnValue":{"type":"boolean","description":"either true or false whether the value is an Object or not"}},"examples":["import { isObject } from \\"@commonly/reflect\\"\\r\\risObject(new Object())      //-> true\\risObject({})                //-> true\\risObject(null)              //-> false\\risObject(undefined)         //-> false\\r"],"metadata":{"source":"/isObject/isObject.ts","specification":"/isObject/isObject.spec.ts"},"description":"Check if a given value is an {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object | Object}."},{"name":"isPrimitive","since":"1.0.0","remarks":["Both can classify as a primitive, the primitive value and a primitive wrapper object."],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"unknown | Primitive","description":"is a value to check"}],"typeparameters":[],"returnValue":{"type":"boolean","description":"either true or false whether the value is a Primitive or not"}},"examples":["import { isPrimitive } from \\"@commonly/reflect\\"\\r\\risPrimitive(undefined)   //-> true\\risPrimitive(null)        //-> true\\risPrimitive(NaN)         //-> true\\risPrimitive([])          //-> false\\r"],"metadata":{"source":"/isPrimitive/isPrimitive.ts","specification":"/isPrimitive/isPrimitive.spec.ts"},"description":"Check if a given value is a {@link @commonly/type:Primitive | Primitive}."},{"name":"isPromise","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"unknown | Promise","description":"is a value to check"}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"boolean","description":"either true or false whether the value is a Promise or not"}},"examples":["import { isPromise } from \\"@commonly/reflect\\"\\r\\risPromise(new Promise())         //-> true\\risPromise(Promise.resolve())     //-> true\\risPromise(NaN)                   //-> false\\r"],"metadata":{"source":"/isPromise/isPromise.ts","specification":"/isPromise/isPromise.spec.ts"},"description":"Check if a given value is a {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise | Promise}."},{"name":"isReduced","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"TValue | Reduced","description":null}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"boolean","description":null}},"examples":[],"metadata":{"source":"/isReduced/isReduced.ts","specification":"/isReduced/isReduced.spec.ts"},"description":"[Not yet documented]"},{"name":"isRegExp","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"unknown | RegExp","description":"is a value to check"}],"typeparameters":[],"returnValue":{"type":"boolean","description":"either true or false whether the value is a RegExp or not"}},"examples":["import { isRegExp } from \\"@commonly/reflect\\"\\r\\risRegExp(new RegExp(\\"ab+c\\"))        //-> true\\risRegExp(/ab+c/)                    //-> true\\risRegExp(NaN)                       //-> false\\r"],"metadata":{"source":"/isRegExp/isRegExp.ts","specification":"/isRegExp/isRegExp.spec.ts"},"description":"Check if a given value is a {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp | RegExp}."},{"name":"isSet","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"unknown | Set","description":"is a value to check"}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"boolean","description":"either true or false whether the value is a Set or not"}},"examples":["import { isSet } from \\"@commonly/reflect\\"\\r\\risSet(new Set())     //-> true\\risSet(NaN)           //-> false\\r"],"metadata":{"source":"/isSet/isSet.ts","specification":"/isSet/isSet.spec.ts"},"description":"Check if a given value is a {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set | Set}."},{"name":"isString","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"unknown | string","description":"is a value to check"}],"typeparameters":[],"returnValue":{"type":"boolean","description":"either true or false whether the value is a string or not"}},"examples":["import { isString } from \\"@commonly/reflect\\"\\r\\risString(\\"string\\")   //-> true\\risString(null)       //-> false\\r"],"metadata":{"source":"/isString/isString.ts","specification":"/isString/isString.spec.ts"},"description":"Check if a given value is a {@link https://developer.mozilla.org/en-US/docs/Glossary/string | string}."},{"name":"isSymbol","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"unknown | symbol","description":"is a value to check"}],"typeparameters":[],"returnValue":{"type":"boolean","description":"either true or false whether the value is a symbol or not"}},"examples":["import { isSymbol } from \\"@commonly/reflect\\"\\r\\risSymbol(Symbol())      //-> true\\risSymbol(NaN)           //-> false\\r"],"metadata":{"source":"/isSymbol/isSymbol.ts","specification":"/isSymbol/isSymbol.spec.ts"},"description":"Check if a given value is a {@link https://developer.mozilla.org/en-US/docs/Glossary/symbol | symbol}."},{"name":"isUndefined","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"unknown | undefined","description":"is a value to check"}],"typeparameters":[],"returnValue":{"type":"boolean","description":"either true or false whether the value is an undefined or not"}},"examples":["import { isUndefined } from \\"@commonly/reflect\\"\\r\\risUndefined(undefined)   //-> true\\risUndefined(null)        //-> false\\r"],"metadata":{"source":"/isUndefined/isUndefined.ts","specification":"/isUndefined/isUndefined.spec.ts"},"description":"Check if a given value is an {@link https://developer.mozilla.org/en-US/docs/Glossary/undefined | undefined}."}]')},TY3G:function(e){e.exports=JSON.parse('{"name":"@commonly/type","version":"0.2.0-next.37","description":"Collection of utility types.","main":"./index.js","types":"./index.d.ts","scripts":{"build":"npm run clean && cmnybuild","clean":"cmnyclean","test":"cmnytest","document":"cmnydocument ./","prepack":"npm run build && npm run test"},"publishConfig":{"access":"public"},"files":["package.json","README.md","CHANGELOG.md","**/*.js","**/*.d.ts","**/*.d.ts.map"],"author":"Mateusz Pietrzak","homepage":"https://commonlyjs.com","repository":"https://github.com/commonlyjs/commonly","bugs":"https://github.com/commonlyjs/commonly/issues","license":"MIT","keywords":["commonly","type"]}')},ZPm4:function(e){e.exports=JSON.parse('[{"name":"compose","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"functions","variadic":true,"defaultValue":null,"optional":false,"type":"undefined[]","description":"are functions to be composed"}],"typeparameters":[{"name":"TReturnValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Function.Variadic","description":"a composed function"}},"examples":["import { compose } from \\"@commonly/function\\"\\r\\rconst composed = compose(String, Math.sin)\\rcomposed(7)      // -> \\"0.6569865987187891\\"\\r"],"metadata":{"source":"/compose/compose.ts","specification":"/compose/compose.spec.ts"},"description":"Performs a {@link https://en.wikipedia.org/wiki/Function_composition | function composition} of a given functions."},{"name":"curry","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"f","variadic":false,"defaultValue":null,"optional":false,"type":"Function.Variadic","description":"is a function to be curried"}],"typeparameters":[{"name":"TResult","defaultValue":null,"extends":null},{"name":"TParameters","defaultValue":null,"extends":null}],"returnValue":{"type":"Function.Curried","description":"a curried version of an f function"}},"examples":["import { curry } from \\"@commonly/function\\"\\r\\rconst power = curry(Math.pow)\\rpower(2)(3)     // -> 8\\r"],"metadata":{"source":"/curry/curry.ts","specification":"/curry/curry.spec.ts"},"description":"Performs a {@link https://en.wikipedia.org/wiki/Currying | currying} of an f function."},{"name":"debounce","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"debounced","variadic":false,"defaultValue":null,"optional":false,"type":"Function.Variadic","description":"is a function to be debounced"},{"name":"wait","variadic":false,"defaultValue":"0","optional":false,"type":"number","description":"is a time in milliseconds to delay the next execution of the debounced function"},{"name":"options","variadic":false,"defaultValue":null,"optional":false,"description":"is an object which further defines the behaviour of the debounced function"}],"typeparameters":[{"name":"TReturnValue","defaultValue":null,"extends":null},{"name":"TArguments","defaultValue":null,"extends":null}],"returnValue":{"type":"Debounced","description":"a debounced function"}},"examples":["import { debounce } from \\"@commonly/function\\"\\r\\rdocument.body.onscroll = debounce(alert, 250)     // -> A prompt will be shown only once for every time scrolling happens\\r"],"metadata":{"source":"/debounce/debounce.ts","specification":"/debounce/debounce.spec.ts"},"description":"Debounces a function postponing its execution by a `wait` time every time the function is invoked."},{"name":"delegate","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"f","variadic":false,"defaultValue":null,"optional":false,"type":"Function.Variadic","description":null},{"name":"options","variadic":false,"defaultValue":null,"optional":false,"description":null}],"typeparameters":[{"name":"TReturnValue","defaultValue":null,"extends":null},{"name":"TArguments","defaultValue":null,"extends":null}],"returnValue":{"type":null,"description":null}},"examples":["import { delegate } from \\"@commonly/function\\"\\r"],"metadata":{"source":"/delegate/delegate.ts","specification":"/delegate/delegate.spec.ts"},"description":"[Not documented yet]"},{"name":"identity","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"TValue","description":"is any given value"}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"TValue","description":"a passed in value"}},"examples":["import { identity } from \\"@commonly/function\\"\\r\\ridentity(2)     // -> 2\\ridentity(3)     // -> 3\\ridentity(5)     // -> 5\\r"],"metadata":{"source":"/identity/identity.ts","specification":"/identity/identity.spec.ts"},"description":"In mathematics, an identity function, also called an identity relation or identity map or identity transformation, is a function that always returns the same value that was used as its argument. That is, for f being identity the equality f(x) = x holds for all x."},{"name":"negate","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"predicate","variadic":false,"defaultValue":null,"optional":false,"type":"Predicate","description":"is a predicate function to be negated"}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Predicate","description":"a negated version of a predicate function"}},"examples":["import { negate } from \\"@commonly/function\\"\\r\\rconst isUnsealed = negate(Object.isSealed)\\risUnsealed(window)  // -> true\\r"],"metadata":{"source":"/negate/negate.ts","specification":"/negate/negate.spec.ts"},"description":"Negates a given {@link @commonly/type:Primitive | predicate function}, thus creating a new negated version of that function."},{"name":"noop","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"_","variadic":true,"defaultValue":null,"optional":false,"type":"unknown[]","description":"is a variadic list of parameters which are unused anyway"}],"typeparameters":[],"returnValue":{"type":"undefined","description":"an undefined"}},"examples":["import { noop } from \\"@commonly/function\\"\\r\\rnoop(1, 1, 2, 3, 5)     // -> undefined\\r"],"metadata":{"source":"/noop/noop.ts","specification":"/noop/noop.spec.ts"},"description":"Always returns an undefined no matter the arguments."},{"name":"partial","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"f","variadic":false,"defaultValue":null,"optional":false,"type":"Function.Variadic","description":"is a function to partially apply list of arguments to"},{"name":"applied","variadic":true,"defaultValue":null,"optional":false,"type":"TApplied","description":"is a list of arguments to be prepended to an f function"}],"typeparameters":[{"name":"TResult","defaultValue":null,"extends":null},{"name":"TParameters","defaultValue":null,"extends":null},{"name":"TApplied","defaultValue":null,"extends":null}],"returnValue":{"type":"Function.Partial","description":"a partially applied f function"}},"examples":[" import { partial } from \\"@commonly/function\\"\\r\\rconst isNaN = partial(Object.is, NaN)\\risNaN(NaN)  // -> true\\r"],"metadata":{"source":"/partial/partial.ts","specification":"/partial/partial.spec.ts"},"description":"Partially applies a list of arguments to an f function. It\'s similar to a {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind | Function.prototype.bind} method, except it preserves *this* context."},{"name":"reduced","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"TValue | Reduced","description":null}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Reduced","description":null}},"examples":[],"metadata":{"source":"/reduced/reduced.ts","specification":"/reduced/reduced.spec.ts"},"description":"[Not yet documented]"},{"name":"reducing","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"accumulator","variadic":false,"defaultValue":null,"optional":false,"type":"unknown","description":null}],"typeparameters":[{"name":"TAccumulator","defaultValue":null,"extends":null},{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Transduced","description":"a reducing function"}},"examples":[],"metadata":{"source":"/reducing/reducing.ts","specification":"/reducing/reducing.spec.ts"},"description":"Provides a reducing function based on passed accumulator, if nothing suitable is found, then it returns a scalar reducer."},{"name":"tap","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"interceptor","variadic":false,"defaultValue":null,"optional":false,"description":"is a function to which the intercepted value will be provided, any value returned will be thrown away"},{"name":"value","variadic":false,"defaultValue":null,"optional":false,"type":"TValue","description":"is a value to be intercepted"}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"TValue","description":"an intercepted value"}},"examples":["import { tap } from \\"@commonly/function\\"\\r\\rPromise.resolve(3)\\r.then(tap(alert))    // -> value `x` will be shown in the alert box, it will equal to 3\\r.then(x => x * x)    // -> x is still equal to 3, chain is preserved\\r.then(tap(alert))    // -> value `x` will be shown again, this time it will equal to 9\\r"],"metadata":{"source":"/tap/tap.ts","specification":"/tap/tap.spec.ts"},"description":"Invokes a function on a given value and returns that value."},{"name":"throttle","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"throttled","variadic":false,"defaultValue":null,"optional":false,"type":"Function.Variadic","description":"is a function to be throttled"},{"name":"wait","variadic":false,"defaultValue":"0","optional":false,"type":"number","description":"is a time in milliseconds to delay the next execution of the throttled function"}],"typeparameters":[{"name":"TReturnValue","defaultValue":null,"extends":null},{"name":"TArguments","defaultValue":null,"extends":null}],"returnValue":{"type":"Throttled","description":"a throttled function"}},"examples":["import { throttle } from \\"@commonly/function\\"\\r\\rdocument.body.onscroll = throttle(alert, 1250)     // -> A prompt will be shown once every 1250 milliseconds while scrolling\\r"],"metadata":{"source":"/throttle/throttle.ts","specification":"/throttle/throttle.spec.ts"},"description":"Throttles a function meaning it will be executed only once per `wait` time."}]')},aqxX:function(e){e.exports=JSON.parse('{"name":"@commonly/transducer","version":"0.2.0-next.28","description":"Collection of transducing functions.","main":"./index.js","types":"./index.d.ts","scripts":{"build":"npm run clean && cmnybuild","clean":"cmnyclean","test":"cmnytest","document":"cmnydocument ./","prepack":"npm run build && npm run test"},"publishConfig":{"access":"public"},"files":["package.json","README.md","CHANGELOG.md","**/*.js","**/*.d.ts","**/*.d.ts.map"],"author":"Mateusz Pietrzak","homepage":"https://commonlyjs.com","repository":"https://github.com/commonlyjs/commonly","bugs":"https://github.com/commonlyjs/commonly/issues","license":"MIT","keywords":["commonly","transducer"]}')},gFSH:function(e){e.exports=JSON.parse('[{"name":"filter","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"predicate","variadic":false,"defaultValue":null,"optional":false,"type":"Predicate","description":"is a predicate"},{"name":"iterable","variadic":false,"defaultValue":null,"optional":false,"type":"Iterable","description":"is an iterable to be iterated over"}],"typeparameters":[{"name":"TAccumulator","defaultValue":null,"extends":null},{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":null,"description":"an iterable of the same type as the one given"}},"examples":["import { filter } from \\"@commonly/iterable\\"\\r\\rfilter(x => x % 2, [ 0, 1, 1, 2, 3, 5, 8 ])      // -> [ 1, 1, 2, 3, 5 ]\\r"],"metadata":{"source":"/filter/filter.ts","specification":"/filter/filter.spec.ts"},"description":"Creates a new iterable of the same type as the one given, with only values passing the given predicate function."},{"name":"map","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"mapper","variadic":false,"defaultValue":null,"optional":false,"type":"Mapper","description":"is a mapping function"},{"name":"iterable","variadic":false,"defaultValue":null,"optional":false,"type":"Iterable","description":"is an iterable to be iterated over"}],"typeparameters":[{"name":"TValueA","defaultValue":null,"extends":null},{"name":"TValueB","defaultValue":null,"extends":null}],"returnValue":{"type":"Iterable","description":"an iterable of the same type as the one given"}},"examples":["import { map } from \\"@commonly/iterable\\"\\r\\rmap(x => x * x, [ 0, 1, 1, 2, 3, 5, 8 ])         // -> [ 0, 1, 1, 4, 9, 25, 64 ]\\r"],"metadata":{"source":"/map/map.ts","specification":"/map/map.spec.ts"},"description":"Applies a mapper function to each element in the iterable, producing an iterable of the same type."},{"name":"reduce","since":"1.0.0","remarks":["Often reduce function happens to be called a {@link https://en.wikipedia.org/wiki/Fold_(higher-order_function) | fold function}."],"signature":{"parameters":[{"name":"reducer","variadic":false,"defaultValue":null,"optional":false,"type":"Reducer","description":"is a reducing function"},{"name":"accumulator","variadic":false,"defaultValue":null,"optional":false,"type":"TAccumulator","description":"is an initial value for an accumulator"},{"name":"iterable","variadic":false,"defaultValue":null,"optional":false,"type":"Iterable","description":"is an iterable to be reduced"}],"typeparameters":[{"name":"TAccumulator","defaultValue":null,"extends":null},{"name":"TValueA","defaultValue":null,"extends":null},{"name":"TValueB","defaultValue":null,"extends":null}],"returnValue":{"type":"TAccumulator","description":"an accumulated value"}},"examples":["import { reduce } from \\"@commonly/iterable\\"\\r\\rreduce((accumulator, value) => accumulator + value, 0, [0, 1, 1, 2, 3])      // -> 7\\r"],"metadata":{"source":"/reduce/reduce.ts","specification":"/reduce/reduce.spec.ts"},"description":"Perform a reduction on a given iterable by applying a given {@link @commonly/type:Reducer | reducing function} to each yield value from an iterable."},{"name":"slice","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"start","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":"is a beginning of a slice"},{"name":"end","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":"is an end of a slice"},{"name":"iterable","variadic":false,"defaultValue":null,"optional":false,"type":"Iterable","description":"is an iterable to be sliced from"}],"typeparameters":[{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Iterable","description":"an iterable of the same type as the one given"}},"examples":["import { slice } from \\"@commonly/iterable\\"\\r\\rslice(1, 5, [ 0, 1, 1, 2, 3, 5, 8 ])     // -> [ 1, 1, 2, 3, 5 ]\\r"],"metadata":{"source":"/slice/slice.ts","specification":"/slice/slice.spec.ts"},"description":"Creates a new iterable of the same type as the one given, where only values from start to end are included."},{"name":"take","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"n","variadic":false,"defaultValue":null,"optional":false,"type":"number","description":"is a number of elements to be taken"},{"name":"iterable","variadic":false,"defaultValue":null,"optional":false,"type":"Iterable","description":"is an iterable to be taken from"}],"typeparameters":[{"name":"TAccumulator","defaultValue":null,"extends":null},{"name":"TValue","defaultValue":null,"extends":null}],"returnValue":{"type":"Iterable","description":"an iterable of the same type as the one given"}},"examples":["import { take } from \\"@commonly/iterable\\"\\r\\rtake(5, [ 0, 1, 1, 2, 3, 5, 8 ])     // -> [ 0, 1, 1, 2, 3 ]\\r"],"metadata":{"source":"/take/take.ts","specification":"/take/take.spec.ts"},"description":"Creates a new iterable of the same type as the one given, where only first n values are taken."},{"name":"transduce","since":"1.0.0","remarks":[],"signature":{"parameters":[{"name":"transducer","variadic":false,"defaultValue":null,"optional":false,"type":"Transducer","description":null},{"name":"iterable","variadic":false,"defaultValue":null,"optional":false,"type":"Iterable","description":null},{"name":"reducer","variadic":false,"defaultValue":null,"optional":false,"type":"Transduced","description":null},{"name":"accumulator","variadic":false,"defaultValue":null,"optional":false,"type":"TAccumulator","description":null}],"typeparameters":[{"name":"TAccumulator","defaultValue":null,"extends":null},{"name":"TValueA","defaultValue":null,"extends":null},{"name":"TValueB","defaultValue":null,"extends":null}],"returnValue":{"type":"TAccumulator","description":null}},"examples":[],"metadata":{"source":"/transduce/transduce.ts","specification":"/transduce/transduce.spec.ts"},"description":"[Not yet documented]"}]')},gL0S:function(e){e.exports=JSON.parse('{"name":"@commonly/function","version":"0.2.0-next.37","description":"Collection of functional utilities, often higher-order functions.","main":"./index.js","types":"./index.d.ts","scripts":{"build":"npm run clean && cmnybuild","clean":"cmnyclean","test":"cmnytest","document":"cmnydocument ./","prepack":"npm run build && npm run test"},"publishConfig":{"access":"public"},"files":["package.json","README.md","CHANGELOG.md","**/*.js","**/*.d.ts","**/*.d.ts.map"],"author":"Mateusz Pietrzak","homepage":"https://commonlyjs.com","repository":"https://github.com/commonlyjs/commonly","bugs":"https://github.com/commonlyjs/commonly/issues","license":"MIT","keywords":["commonly","function"]}')},jLYJ:function(e){e.exports=JSON.parse('{"name":"@commonly/reflect","version":"0.1.1-next.4","description":"Collection of reflection utilities.","main":"./index.js","types":"./index.d.ts","scripts":{"build":"npm run clean && cmnybuild","clean":"cmnyclean","test":"cmnytest","document":"cmnydocument ./","prepack":"npm run build && npm run test"},"publishConfig":{"access":"public"},"files":["package.json","README.md","CHANGELOG.md","**/*.js","**/*.d.ts","**/*.d.ts.map"],"author":"Mateusz Pietrzak","homepage":"https://commonlyjs.com","repository":"https://github.com/commonlyjs/commonly","bugs":"https://github.com/commonlyjs/commonly/issues","license":"MIT","keywords":["commonly","reflect"]}')},wZee:function(e,a,t){(function(a){t("rGqo"),t("yt8O"),t("RW0V"),t("Oyvg"),t("SRfc"),t("8+KV"),t("HAE/"),t("a1Th"),t("h7Nl"),t("Btvt"),t("pIFo"),t("bWfx"),t("LK8F");var n=function(e){var a=/\blang(?:uage)?-([\w-]+)\b/i,t=0,n={manual:e.Prism&&e.Prism.manual,disableWorkerMessageHandler:e.Prism&&e.Prism.disableWorkerMessageHandler,util:{encode:function(e){return e instanceof r?new r(e.type,n.util.encode(e.content),e.alias):Array.isArray(e)?e.map(n.util.encode):e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++t}),e.__id},clone:function e(a,t){var r,i,s=n.util.type(a);switch(t=t||{},s){case"Object":if(i=n.util.objId(a),t[i])return t[i];for(var l in r={},t[i]=r,a)a.hasOwnProperty(l)&&(r[l]=e(a[l],t));return r;case"Array":return i=n.util.objId(a),t[i]?t[i]:(r=[],t[i]=r,a.forEach((function(a,n){r[n]=e(a,t)})),r);default:return a}}},languages:{extend:function(e,a){var t=n.util.clone(n.languages[e]);for(var r in a)t[r]=a[r];return t},insertBefore:function(e,a,t,r){var i=(r=r||n.languages)[e],s={};for(var l in i)if(i.hasOwnProperty(l)){if(l==a)for(var o in t)t.hasOwnProperty(o)&&(s[o]=t[o]);t.hasOwnProperty(l)||(s[l]=i[l])}var u=r[e];return r[e]=s,n.languages.DFS(n.languages,(function(a,t){t===u&&a!=e&&(this[a]=s)})),s},DFS:function e(a,t,r,i){i=i||{};var s=n.util.objId;for(var l in a)if(a.hasOwnProperty(l)){t.call(a,l,a[l],r||l);var o=a[l],u=n.util.type(o);"Object"!==u||i[s(o)]?"Array"!==u||i[s(o)]||(i[s(o)]=!0,e(o,t,l,i)):(i[s(o)]=!0,e(o,t,null,i))}}},plugins:{},highlightAll:function(e,a){n.highlightAllUnder(document,e,a)},highlightAllUnder:function(e,a,t){var r={callback:t,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};n.hooks.run("before-highlightall",r);for(var i,s=e.querySelectorAll(r.selector),l=0;i=s[l++];)n.highlightElement(i,!0===a,r.callback)},highlightElement:function(t,r,i){for(var s,l="none",o=t;o&&!a.test(o.className);)o=o.parentNode;o&&(l=(o.className.match(a)||[,"none"])[1].toLowerCase(),s=n.languages[l]),t.className=t.className.replace(a,"").replace(/\s+/g," ")+" language-"+l,t.parentNode&&(o=t.parentNode,/pre/i.test(o.nodeName)&&(o.className=o.className.replace(a,"").replace(/\s+/g," ")+" language-"+l));var u={element:t,language:l,grammar:s,code:t.textContent},c=function(e){u.highlightedCode=e,n.hooks.run("before-insert",u),u.element.innerHTML=u.highlightedCode,n.hooks.run("after-highlight",u),n.hooks.run("complete",u),i&&i.call(u.element)};if(n.hooks.run("before-sanity-check",u),u.code)if(n.hooks.run("before-highlight",u),u.grammar)if(r&&e.Worker){var p=new Worker(n.filename);p.onmessage=function(e){c(e.data)},p.postMessage(JSON.stringify({language:u.language,code:u.code,immediateClose:!0}))}else c(n.highlight(u.code,u.grammar,u.language));else c(n.util.encode(u.code));else n.hooks.run("complete",u)},highlight:function(e,a,t){var i={code:e,grammar:a,language:t};return n.hooks.run("before-tokenize",i),i.tokens=n.tokenize(i.code,i.grammar),n.hooks.run("after-tokenize",i),r.stringify(n.util.encode(i.tokens),i.language)},matchGrammar:function(e,a,t,i,s,l,o){for(var u in t)if(t.hasOwnProperty(u)&&t[u]){if(u==o)return;var c=t[u];c="Array"===n.util.type(c)?c:[c];for(var p=0;p<c.length;++p){var m=c[p],d=m.inside,f=!!m.lookbehind,y=!!m.greedy,g=0,h=m.alias;if(y&&!m.pattern.global){var v=m.pattern.toString().match(/[imuy]*$/)[0];m.pattern=RegExp(m.pattern.source,v+"g")}m=m.pattern||m;for(var x=i,b=s;x<a.length;b+=a[x].length,++x){var k=a[x];if(a.length>e.length)return;if(!(k instanceof r)){if(y&&x!=a.length-1){if(m.lastIndex=b,!(F=m.exec(e)))break;for(var V=F.index+(f?F[1].length:0),w=F.index+F[0].length,E=x,N=b,T=a.length;E<T&&(N<w||!a[E].type&&!a[E-1].greedy);++E)V>=(N+=a[E].length)&&(++x,b=N);if(a[x]instanceof r)continue;S=E-x,k=e.slice(b,N),F.index-=b}else{m.lastIndex=0;var F=m.exec(k),S=1}if(F){f&&(g=F[1]?F[1].length:0);w=(V=F.index+g)+(F=F[0].slice(g)).length;var A=k.slice(0,V),j=k.slice(w),P=[x,S];A&&(++x,b+=A.length,P.push(A));var C=new r(u,d?n.tokenize(F,d):F,h,F,y);if(P.push(C),j&&P.push(j),Array.prototype.splice.apply(a,P),1!=S&&n.matchGrammar(e,a,t,x,b,!0,u),l)break}else if(l)break}}}}},tokenize:function(e,a){var t=[e],r=a.rest;if(r){for(var i in r)a[i]=r[i];delete a.rest}return n.matchGrammar(e,t,a,0,0,!1),t},hooks:{all:{},add:function(e,a){var t=n.hooks.all;t[e]=t[e]||[],t[e].push(a)},run:function(e,a){var t=n.hooks.all[e];if(t&&t.length)for(var r,i=0;r=t[i++];)r(a)}},Token:r};function r(e,a,t,n,r){this.type=e,this.content=a,this.alias=t,this.length=0|(n||"").length,this.greedy=!!r}if(e.Prism=n,r.stringify=function(e,a){if("string"==typeof e)return e;if(Array.isArray(e))return e.map((function(e){return r.stringify(e,a)})).join("");var t={type:e.type,content:r.stringify(e.content,a),tag:"span",classes:["token",e.type],attributes:{},language:a};if(e.alias){var i=Array.isArray(e.alias)?e.alias:[e.alias];Array.prototype.push.apply(t.classes,i)}n.hooks.run("wrap",t);var s=Object.keys(t.attributes).map((function(e){return e+'="'+(t.attributes[e]||"").replace(/"/g,"&quot;")+'"'})).join(" ");return"<"+t.tag+' class="'+t.classes.join(" ")+'"'+(s?" "+s:"")+">"+t.content+"</"+t.tag+">"},!e.document)return e.addEventListener?(n.disableWorkerMessageHandler||e.addEventListener("message",(function(a){var t=JSON.parse(a.data),r=t.language,i=t.code,s=t.immediateClose;e.postMessage(n.highlight(i,n.languages[r],r)),s&&e.close()}),!1),n):n;var i=document.currentScript||[].slice.call(document.getElementsByTagName("script")).pop();return i&&(n.filename=i.src,n.manual||i.hasAttribute("data-manual")||("loading"!==document.readyState?window.requestAnimationFrame?window.requestAnimationFrame(n.highlightAll):window.setTimeout(n.highlightAll,16):document.addEventListener("DOMContentLoaded",n.highlightAll))),n}("undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{});e.exports&&(e.exports=n),void 0!==a&&(a.Prism=n),n.languages.markup={comment:/<!--[\s\S]*?-->/,prolog:/<\?[\s\S]+?\?>/,doctype:/<!DOCTYPE[\s\S]+?>/i,cdata:/<!\[CDATA\[[\s\S]*?]]>/i,tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/i,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/i,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/i,inside:{punctuation:[/^=/,{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:/&#?[\da-z]{1,8};/i},n.languages.markup.tag.inside["attr-value"].inside.entity=n.languages.markup.entity,n.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))})),Object.defineProperty(n.languages.markup.tag,"addInlined",{value:function(e,a){var t={};t["language-"+a]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:n.languages[a]},t.cdata=/^<!\[CDATA\[|\]\]>$/i;var r={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:t}};r["language-"+a]={pattern:/[\s\S]+/,inside:n.languages[a]};var i={};i[e]={pattern:RegExp(/(<__[\s\S]*?>)(?:<!\[CDATA\[[\s\S]*?\]\]>\s*|[\s\S])*?(?=<\/__>)/.source.replace(/__/g,e),"i"),lookbehind:!0,greedy:!0,inside:r},n.languages.insertBefore("markup","cdata",i)}}),n.languages.xml=n.languages.extend("markup",{}),n.languages.html=n.languages.markup,n.languages.mathml=n.languages.markup,n.languages.svg=n.languages.markup,function(e){var a=/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-]+[\s\S]*?(?:;|(?=\s*\{))/,inside:{rule:/@[\w-]+/}},url:{pattern:RegExp("url\\((?:"+a.source+"|[^\n\r()]*)\\)","i"),inside:{function:/^url/i,punctuation:/^\(|\)$/}},selector:RegExp("[^{}\\s](?:[^{};\"']|"+a.source+")*?(?=\\s*\\{)"),string:{pattern:a,greedy:!0},property:/[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i,important:/!important\b/i,function:/[-a-z0-9]+(?=\()/i,punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var t=e.languages.markup;t&&(t.tag.addInlined("style","css"),e.languages.insertBefore("inside","attr-value",{"style-attr":{pattern:/\s*style=("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/i,inside:{"attr-name":{pattern:/^\s*style/i,inside:t.tag.inside},punctuation:/^\s*=\s*['"]|['"]\s*$/,"attr-value":{pattern:/.+/i,inside:e.languages.css}},alias:"language-css"}},t.tag))}(n),n.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,boolean:/\b(?:true|false)\b/,function:/\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,punctuation:/[{}[\];(),.:]/},n.languages.javascript=n.languages.extend("clike",{"class-name":[n.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/,lookbehind:!0}],keyword:[{pattern:/((?:^|})\s*)(?:catch|finally)\b/,lookbehind:!0},{pattern:/(^|[^.])\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],number:/\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,function:/#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,operator:/-[-=]?|\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\|[|=]?|\*\*?=?|\/=?|~|\^=?|%=?|\?|\.{3}/}),n.languages.javascript["class-name"][0].pattern=/(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/,n.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=\s*($|[\r\n,.;})\]]))/,lookbehind:!0,greedy:!0},"function-variable":{pattern:/#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)?\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\))/,lookbehind:!0,inside:n.languages.javascript},{pattern:/[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=>)/i,inside:n.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*=>)/,lookbehind:!0,inside:n.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\s*)\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*\{)/,lookbehind:!0,inside:n.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),n.languages.insertBefore("javascript","string",{"template-string":{pattern:/`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\${)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\${|}$/,alias:"punctuation"},rest:n.languages.javascript}},string:/[\s\S]+/}}}),n.languages.markup&&n.languages.markup.tag.addInlined("script","javascript"),n.languages.js=n.languages.javascript,"undefined"!=typeof self&&self.Prism&&self.document&&document.querySelector&&(self.Prism.fileHighlight=function(e){e=e||document;var a={js:"javascript",py:"python",rb:"ruby",ps1:"powershell",psm1:"powershell",sh:"bash",bat:"batch",h:"c",tex:"latex"};Array.prototype.slice.call(e.querySelectorAll("pre[data-src]")).forEach((function(e){if(!e.hasAttribute("data-src-loaded")){for(var t,r=e.getAttribute("data-src"),i=e,s=/\blang(?:uage)?-([\w-]+)\b/i;i&&!s.test(i.className);)i=i.parentNode;if(i&&(t=(e.className.match(s)||[,""])[1]),!t){var l=(r.match(/\.(\w+)$/)||[,""])[1];t=a[l]||l}var o=document.createElement("code");o.className="language-"+t,e.textContent="",o.textContent="Loading…",e.appendChild(o);var u=new XMLHttpRequest;u.open("GET",r,!0),u.onreadystatechange=function(){4==u.readyState&&(u.status<400&&u.responseText?(o.textContent=u.responseText,n.highlightElement(o),e.setAttribute("data-src-loaded","")):u.status>=400?o.textContent="✖ Error "+u.status+" while fetching file: "+u.statusText:o.textContent="✖ Error: File does not exist or is empty")},u.send(null)}})),n.plugins.toolbar&&n.plugins.toolbar.registerButton("download-file",(function(e){var a=e.element.parentNode;if(a&&/pre/i.test(a.nodeName)&&a.hasAttribute("data-src")&&a.hasAttribute("data-download-link")){var t=a.getAttribute("data-src"),n=document.createElement("a");return n.textContent=a.getAttribute("data-download-link-label")||"Download",n.setAttribute("download",""),n.href=t,n}}))},document.addEventListener("DOMContentLoaded",(function(){self.Prism.fileHighlight()})))}).call(this,t("yLpj"))}}]);
//# sourceMappingURL=component---src-pages-api-tsx-e55b90843a167c849918.js.map