{"componentChunkName":"component---src-templates-blog-template-tsx","path":"/articles/map-filter-reduce","result":{"data":{"markdownRemark":{"html":"<h1>What's all the fuss about?</h1>\n<p>As you all may know, functional style of programming has gotten really a lot of attention lately.\nIt's happening for several reasons, some of them are supposedly flaws in the object-oriented paradigm highlighted by the programming community.</p>\n<blockquote>\n<p>Because the problem with object-oriented languages is theyâ€™ve got all this implicit environment that they carry around with them.\nYou wanted a banana but what you got was a gorilla holding the banana and the entire jungle.</p>\n<p><cite>Joe Armstrong, creator of Erlang, on software reusability.</cite></p>\n</blockquote>\n<p>JavaScript happens to support both paradigms (to an extent).\nThat's why the community seems to be so divided, as there's this grand pursuit for the holy grail of programming.</p>\n<p>Every tool is different and I believe in that not everything have to be a nail.\nIn this article we're going to talk about three basic functional tools available natively in ES5.\nLearning those will help you on with your programming journey.</p>\n<h1>Array.prototype.map</h1>\n<p>This function plays a really big part in a functional paradigm and is perhaps one of the most useful and often used array method in day to day use.\nThat means, you'll get familiar with it rather pretty quickly.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> new_array <span class=\"token operator\">=</span> old_array<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token comment\">/* Return an element for a new_array */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>It applies given function to each item in an array and returns a new array of results.<br>\nFor an instance an array of values <code class=\"language-text\">[ 1, 2, 3 ]</code> mapped by a function <code class=\"language-text\">f = n =&gt; n * 2</code> will take a form of <code class=\"language-text\">[ f(1), f(2), f(3) ]</code> resulting in array of values <code class=\"language-text\">[ 1, 4, 9 ]</code>.</p>\n<h2>Example</h2>\n<p>So how about an example?  </p>\n<p>Let's say we have a collection of in-game items, each having its own set of unique parameters and we want to display a name of every item in a chest we looted.<br>\nAdditionally, we would like to make all of those lowercase so it will blend in with the rest of the sentence nicely.</p>\n<h3>With the map</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> carcass <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Gold coins\"</span><span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">:</span> <span class=\"token number\">12</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Rusty sword\"</span><span class=\"token punctuation\">,</span> damage<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> durability<span class=\"token punctuation\">:</span> <span class=\"token number\">0.2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Bark shield\"</span><span class=\"token punctuation\">,</span> defense<span class=\"token punctuation\">:</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> durability<span class=\"token punctuation\">:</span> <span class=\"token number\">0.42</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Mail helmet\"</span><span class=\"token punctuation\">,</span> defense<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> durability<span class=\"token punctuation\">:</span> <span class=\"token number\">0.88</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> loot <span class=\"token operator\">=</span> carcass<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dev: loot variable\"</span><span class=\"token punctuation\">,</span> loot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Sir. Whinealot have looted </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>loot<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", \"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> from a dead rat.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// dev: loot variable</span>\n<span class=\"token comment\">// [</span>\n<span class=\"token comment\">//     \"gold coins\",</span>\n<span class=\"token comment\">//     \"rusty sword\",</span>\n<span class=\"token comment\">//     \"bark shield\", </span>\n<span class=\"token comment\">//     \"mail helmet\" </span>\n<span class=\"token comment\">// ]</span>\n\n<span class=\"token comment\">// Sir. Whinealot have looted gold coins, rusty sword, bark shield, mail helmet from a dead rat.</span></code></pre></div>\n<h3>Without the map</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> carcass <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Gold coins\"</span><span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">:</span> <span class=\"token number\">12</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Rusty sword\"</span><span class=\"token punctuation\">,</span> damage<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> durability<span class=\"token punctuation\">:</span> <span class=\"token number\">0.2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Bark shield\"</span><span class=\"token punctuation\">,</span> defense<span class=\"token punctuation\">:</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> durability<span class=\"token punctuation\">:</span> <span class=\"token number\">0.42</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Mail helmet\"</span><span class=\"token punctuation\">,</span> defense<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> durability<span class=\"token punctuation\">:</span> <span class=\"token number\">0.88</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> loot <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">of</span> carcass<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    loot<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dev: loot variable\"</span><span class=\"token punctuation\">,</span> loot<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Sir. Whinealot have looted </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>loot<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", \"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> from a dead rat.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// dev: loot variable</span>\n<span class=\"token comment\">// [</span>\n<span class=\"token comment\">//     \"gold coins\",</span>\n<span class=\"token comment\">//     \"rusty sword\",</span>\n<span class=\"token comment\">//     \"bark shield\", </span>\n<span class=\"token comment\">//     \"mail helmet\" </span>\n<span class=\"token comment\">// ]</span>\n\n<span class=\"token comment\">// Sir. Whinealot have looted gold coins, rusty sword, bark shield, mail helmet from a dead rat.</span></code></pre></div>\n<h1>Array.prototype.filter</h1>\n<p>When working with collections oftentimes you will need to find one or more elements of your interest.\nThat's when the <code class=\"language-text\">filter</code> function comes in handy.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> new_array <span class=\"token operator\">=</span> old_array<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token comment\">/* Return true to keep the element, false otherwise */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Basically, it filters out items from an array, that do not return truthy value from passed in function.</p>\n<h2>Example</h2>\n<p>Example time!  </p>\n<p>We are going to tackle an item equipping problem.  </p>\n<p>Sir. Whinealot needs to be armed before going out for an adventure, but not all of the items are available for him, unfortunately.  </p>\n<p><img src=\"/assets/images/pixelart/sir-whinealot/sir-whinealot--unequipped.gif\" alt=\"Sir. Whinealot\" title=\"test\"></p>\n<p>To determine what can be equipped by our brave knight, we will need to compare his level with the level of every item in the rucksack.</p>\n<h3>With the filter</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> player <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Sir. Whinealot\"</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> rucksack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Steel dagger\"</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">11</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Iron mace\"</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Leather boots\"</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Mail socks\"</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Studded armor\"</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">9</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> wearables <span class=\"token operator\">=</span> rucksack<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>level <span class=\"token operator\">&lt;=</span> player<span class=\"token punctuation\">.</span>level<span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dev: wearables variable\"</span><span class=\"token punctuation\">,</span> wearables<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>player<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> can equip </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>wearables<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// dev: wearables variable</span>\n<span class=\"token comment\">// [</span>\n<span class=\"token comment\">//     { name: \"Iron mace\", level: 7 },</span>\n<span class=\"token comment\">//     { name: \"Leather boots\", level: 4 },</span>\n<span class=\"token comment\">//     { name: \"Mail socks\", level: 2 }</span>\n<span class=\"token comment\">// ]</span>\n\n<span class=\"token comment\">// Sir. Whinealot can equip iron mace, leather boots, mail socks.</span></code></pre></div>\n<h3>Without the filter</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> player <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Sir. Whinealot\"</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rucksack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Steel dagger\"</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">11</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Iron mace\"</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Leather boots\"</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Mail socks\"</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Studded armor\"</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">9</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">const</span> wearables <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">of</span> rucksack<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>level <span class=\"token operator\">&lt;=</span> player<span class=\"token punctuation\">.</span>level<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        wearables<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dev: wearables variable\"</span><span class=\"token punctuation\">,</span> wearables<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>player<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> can equip </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>wearables<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\", \"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n\n\n\n<span class=\"token comment\">// dev: wearables variable</span>\n<span class=\"token comment\">// [</span>\n<span class=\"token comment\">//     { name: \"Iron mace\", level: 7 },</span>\n<span class=\"token comment\">//     { name: \"Leather boots\", level: 4 },</span>\n<span class=\"token comment\">//     { name: \"Mail socks\", level: 2 }</span>\n<span class=\"token comment\">// ]</span>\n\n<span class=\"token comment\">// Sir. Whinealot can equip iron mace, leather boots, mail socks.</span></code></pre></div>\n<h1>Array.prototype.reduce</h1>\n<p>And now it's time to present you the last of the three, the <code class=\"language-text\">reduce</code> function.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> new_array <span class=\"token operator\">=</span> old_array<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">accumulator<span class=\"token punctuation\">,</span> item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token comment\">/* value of accumulator on next iteration */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>It applies a rolling computation to sequential pairs of values in an array and returning the result.</p>\n<p>What it means is that it loops through an array while calling on each element a passed in <code class=\"language-text\">callback</code> function.\nThis callback function holds an <code class=\"language-text\">accumulator</code> and <code class=\"language-text\">item</code> as its parameters and have to return a value.<br>\nThen, the returned value will be available on the next iteration as an accumulator argument.</p>\n<p>At last, when it iterates through every item in the list, the <code class=\"language-text\">reduce</code> function will return a result from the last call of a <code class=\"language-text\">callback</code> function. </p>\n<h2>Examples</h2>\n<p>This time our mighty Sir. Whinealot is about to sell his hard-earned loot to the local innkeeper.<br>\nWe have to know the worth of knight's equipment and we will achieve that by calculating the sum of value of every item in the rucksack. </p>\n<p><img src=\"/assets/images/pixelart/sir-whinealot/sir-whinealot--buisness-at-inn.gif\" alt=\"Sir. Whinealot\" title=\"test\"></p>\n<h3>With the reduce</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> rucksack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Steel dagger\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">11</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Iron mace\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Leather boots\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Studded armor\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">9</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> offer <span class=\"token operator\">=</span> rucksack<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">accumulator<span class=\"token punctuation\">,</span> item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> accumulator <span class=\"token operator\">+</span> item<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dev: offer variable\"</span><span class=\"token punctuation\">,</span> offer<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The innkeeper can give you </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>offer<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> gold coins for your equipment.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// dev: offer variable</span>\n<span class=\"token comment\">// 31</span>\n\n<span class=\"token comment\">// The innkeeper can give you 31 gold coins for your equipment.</span></code></pre></div>\n<h3>Without the reduce</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> rucksack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Steel dagger\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">11</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Iron mace\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Leather boots\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Studded armor\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token number\">9</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">let</span> offer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> item <span class=\"token keyword\">of</span> rucksack<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    offer <span class=\"token operator\">=</span> offer <span class=\"token operator\">+</span> item<span class=\"token punctuation\">.</span>value\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dev: offer variable\"</span><span class=\"token punctuation\">,</span> offer<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">The innkeeper can give you </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>offer<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> gold coins for your equipment.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// dev: offer variable</span>\n<span class=\"token comment\">// 31</span>\n\n<span class=\"token comment\">// The innkeeper can give you 31 gold coins for your equipment.</span></code></pre></div>\n<h1>Map, filter and reduce combined</h1>\n<p>Today we learned a basic set of tools that we can use for writing our JavaScript code in a more functional manner, how awesome is that?!\nBut before going out replacing all of the loops in your current project with our just met trio, we need to see the whole picture.  </p>\n<h2>Example</h2>\n<p>Sir. Whinealot is not a type of knight who's fooling around. He just embarked on a demon-slaying adventure.<br>\nFrom a list of creatures pestering a near village, we need to find a demon and slay him, yielding us some sweet experience points.  </p>\n<p><img src=\"/assets/images/pixelart/sir-whinealot/sir-whinealot--orc-encounter.gif\" alt=\"Sir. Whinealot\" title=\"pixelart\"></p>\n<p>We need to extract from a list a demon type creature and then execute him by calling <code class=\"language-text\">slay</code> on him.<br>\nWhen the purge is over, we will need to sum up our hard-earned experience points.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isDemon</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">creature</span> <span class=\"token operator\">=></span> creature<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">\"Demon\"</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">slay</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">creature</span> <span class=\"token operator\">=></span> creature<span class=\"token punctuation\">.</span>experience <span class=\"token operator\">*</span> creature<span class=\"token punctuation\">.</span>level\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token parameter\">left<span class=\"token punctuation\">,</span> right</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> left <span class=\"token operator\">+</span> right\n\n<span class=\"token keyword\">const</span> creatures <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Rat\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Animal\"</span><span class=\"token punctuation\">,</span> experience<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Bandit\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Human\"</span><span class=\"token punctuation\">,</span> experience<span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Wolf\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Animal\"</span><span class=\"token punctuation\">,</span> experience<span class=\"token punctuation\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Utopiec\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Demon\"</span><span class=\"token punctuation\">,</span> experience<span class=\"token punctuation\">:</span> <span class=\"token number\">250</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Guard\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Human\"</span><span class=\"token punctuation\">,</span> experience<span class=\"token punctuation\">:</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Bear\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Animal\"</span><span class=\"token punctuation\">,</span> experience<span class=\"token punctuation\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Likho\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Demon\"</span><span class=\"token punctuation\">,</span> experience<span class=\"token punctuation\">:</span> <span class=\"token number\">375</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Wolf\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Animal\"</span><span class=\"token punctuation\">,</span> experience<span class=\"token punctuation\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> experience <span class=\"token operator\">=</span>\n    creatures\n        <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>isDemon<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>slay<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>add<span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dev: experience variable\"</span><span class=\"token punctuation\">,</span> experience<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You've just gained </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>experience<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> experience points!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// dev: experience variable</span>\n<span class=\"token comment\">// 5500</span>\n\n<span class=\"token comment\">// You've just gained 5500 experience points!</span></code></pre></div>\n<h1>Last few words</h1>\n<p>I really hope you made it to the end and enjoyed this read.</p>\n<p>And as always.\nWhen in doubt, visit MDN documentation. (<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\">map</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\">filter</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\">reduce</a>.)</p>","frontmatter":{"date":"January 01, 2019","path":"/articles/map-filter-reduce","title":"Map, filter and reduce, the functional way"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}